@model UniversitySystemMVC.ViewModels.ArticlesVM.ArticlesReadVM

@{
    ViewBag.Title = "Read";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>@Model.Title</h2>*@

<section id="articles" class="row">
    <article>
        <header>
            <h2>@Model.Title</h2>
            <p>Added by @Model.User.FirstName @Model.User.LastName</p>
            <p class="article-date">Created: @Model.DateCreated</p>
            <p class="article-date">Last modified: @Model.DateModified</p>
        </header>

        <p class="article-content">@Model.Content</p>

        @* <<<<<<<<< LIKES >>>>>>>>>> *@
        <div class="likes-container row">
            <button id="like-subject-@Model.Id" class="button-like pull-left" data-article="@Model.Id" data-state="@Model.LikeState" data-likescount="@Model.Likes.Count">
                @if (Model.LikeState == 0)
                {
                    <img src="~/Content/images/like.png" alt="Like" />
                }
                else
                {
                    <img src="~/Content/images/unlike.png" alt="Unlike" />
                }
            </button>
            <p id="like-subject-@Model.Id-info" class="pull-left">@Model.Likes.Count <a href="#" data-toggle="modal" data-target="#likes">people</a> like this</p>
        </div>

        <div class="comment-container" id="comment-container-@Model.Id">
            <div class="well">

                <div class="comments" id="comments">
                    <h4>Comments</h4>
                    @if (Model.Comments.Count > 0)
                    {
                        foreach (var c in Model.Comments.OrderByDescending(x => x.DateCreated))
                        {
                            if (c.CommentId == null)
                            {
                                <div class="comment-entry comment-entry-main" id="comment-@c.Id">
                                    <header>
                                        <h5 class="pull-left"><span class="ui-icon ui-icon-comment pull-left"></span><strong id="title-comment-@c.Id" data-comment="@c.Id">@c.Title</strong></h5>
                                        @if (@c.UserId == UniversitySystemMVC.Models.AuthenticationManager.LoggedUser.Id &&
                                            c.UserType == UniversitySystemMVC.Models.AuthenticationManager.UserType)
                                        {
                                            <div class="pull-right">
                                                <button class="btn btn-xs btn-primary btn-edit-comment" data-comment="@c.Id">Edit</button> |
                                                <button class="btn btn-xs btn-danger btn-delete-comment" data-comment="@c.Id">Delete</button> |
                                                <button class="btn btn-xs btn-primary btn-reply-comment" data-comment="@c.Id" data-articleId="@Model.Id">Reply</button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="pull-right">
                                                <button class="btn btn-xs btn-primary btn-reply-comment" data-comment="@c.Id">Reply</button>
                                            </div>
                                        }
                                    </header>

                                    <p class="comment-creator">Added by: @c.FullName</p>
                                    <p class="comment-date">Created: @UniversitySystemMVC.Extensions.CalculateRelativeTime.Calculate(c.DateCreated)</p>
                                    <p class="comment-date">Last modified: @UniversitySystemMVC.Extensions.CalculateRelativeTime.Calculate(c.DateModified)</p>

                                    <p class="comment-content">@c.Content</p>

                                    @foreach (var childC in Model.Comments.OrderBy(x => x.DateCreated))
                                    {
                                        if (childC.CommentId == c.Id)
                                        {
                                            <div class="comment-entry comment-entry-child" id="comment-@childC.Id">
                                                <header>
                                                    <h5 class="pull-left"><span class="ui-icon ui-icon-comment pull-left"></span><strong id="title-comment-@childC.Id" data-comment="@childC.Id">@childC.Title</strong></h5>
                                                    @if (@childC.UserId == UniversitySystemMVC.Models.AuthenticationManager.LoggedUser.Id &&
                                            childC.UserType == UniversitySystemMVC.Models.AuthenticationManager.UserType)
                                                    {
                                                        <div class="pull-right">
                                                            <button class="btn btn-xs btn-primary btn-edit-comment" data-comment="@childC.Id" data-parent="@c.Id">Edit</button> |
                                                            <button class="btn btn-xs btn-danger btn-delete-comment" data-comment="@childC.Id">Delete</button>
                                                        </div>
                                                    }
                                                </header>

                                                <p class="comment-creator">Replied by: @childC.FullName</p>
                                                <p class="comment-date">Created: @UniversitySystemMVC.Extensions.CalculateRelativeTime.Calculate(childC.DateCreated)</p>
                                                <p class="comment-date">Last modified: @UniversitySystemMVC.Extensions.CalculateRelativeTime.Calculate(childC.DateModified)</p>

                                                <p class="comment-content">@childC.Content</p>
                                            </div>
                                        }
                                    }

                                </div>
                            }
                        }
                    }
                </div>

                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#comment-add-@Model.Id" aria-expanded="false" id="add-comment-toggle">
                    Add Comment
                </button>

                <div class="collapse comment-container" id="comment-add-@Model.Id">
                    <h3>Add a comment</h3>
                    @using (Ajax.BeginForm("CreateComment", "Comment", new AjaxOptions { InsertionMode = InsertionMode.InsertAfter, UpdateTargetId = "comments" }))
                    {
                        @Html.LabelFor(x => x.Title)
                        @Html.TextBox("Title", "", new { @class = "form-control" })
                        @Html.LabelFor(x => x.Content)
                        @Html.TextArea("Content", "", new { @class = "form-control" })

                        @Html.HiddenFor(model => model.Id)
                        if (Model.User != null)
                        {
                            Html.Hidden("UserId", Model.User.Id);
                        }
                        @Html.Hidden("UserType", UniversitySystemMVC.Models.AuthenticationManager.UserType)

                        <input type="submit" class="btn btn-block add-comment-btn" value="Add comment" id="submit-comment" data-articleid="@Model.Id" />
                    }

                </div>
            </div>
        </div>

    </article>
</section>

@*Modal - Likes*@


<div class="modal fade" id="likes" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">People who like "@Model.Title"</h4>
            </div>

            <div class="modal-body">
                <ul>
                    @foreach (var like in Model.Likes.OrderByDescending(l => l.DateCreated))
                    {
                        <li>@like.FullName - @like.UserType - @UniversitySystemMVC.Extensions.CalculateRelativeTime.Calculate(like.DateCreated)</li>
                    }
                </ul>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

        </div>

    </div>
</div>

<script src="~/Scripts/likes.js"></script>
<script src="~/Scripts/comments.js"></script>