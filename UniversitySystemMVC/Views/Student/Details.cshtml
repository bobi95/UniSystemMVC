@model UniversitySystemMVC.ViewModels.StudentsVM.StudentDetailsVM

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Username)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsConfirmed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsConfirmed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FacultyNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FacultyNumber)
        </dd>

        <dt>
            Course
        </dt>
        <dd>
            @Model.Course.Name - @Model.Course.Code
        </dd>

        <dt>
            Subjects
        </dt>
        <dd>
            <table class="table">
                <tr>
                    <th>Subject</th>
                    <th>Grades</th>
                    <th>Final grade</th>
                    <th>Teachers</th>
                </tr>

                @foreach (var item in Model.CoursesSubjects)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.Subject.Name, "Details", "Subject", new { id = item.Subject.Id }, new { target = "_blank"})
                        </td>
                        <td>
                            @String.Join(", ", item.Subject.Grades)
                        </td>
                        <td>
                            @if (item.Subject.Grades != null && item.Subject.Grades.Count > 0)
                            {
                                @item.Subject.Grades.Average(g => g.GradeValue)
                            }
                        </td>
                        <td>
                            @Html.Raw(String.Join(", ", item.Teachers.Select(t => { return Html.ActionLink(t.FirstName + " " + t.LastName, "Details", "Teacher", new { id = t.Id }, new { target = "_blank" }); })))
                        </td>
                    </tr>
                }

            </table>

        </dd>

    </dl>
</div>