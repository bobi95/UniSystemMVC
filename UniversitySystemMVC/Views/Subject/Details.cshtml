@model UniversitySystemMVC.ViewModels.SubjectsVM.SubjectsDetailsVM

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Subject.Name - Details</h2>


@using (Html.BeginForm("Details", "Subject", FormMethod.Get))
{
    <p>
        Find by faculty number: @Html.TextBox("facultynumber", null, new { @class = "form-control" }) <br />
        Find by first name: @Html.TextBox("firstname", null, new { @class = "form-control" }) <br />
        Find by last name: @Html.TextBox("lastname", null, new { @class = "form-control" }) <br />
        Filter by course:
        <select name="courseId" class="form-control">
            <option value="0">All Courses</option>
            @foreach (var item in Model.Courses)
            {

                bool selected = item.Id == Model.CourseId;
                <option value="@item.Id" selected="@selected">@item.Name</option>
            }
        </select>
        <br />
        <input type="submit" name="submitBtn" value="Filter" class="btn btn-default" />
        <input type="submit" name="submitBtn" value="Export" class="btn btn-default" />
    </p>
}

<table class="table">
    @foreach (var item in Model.CoursesSubjects)
    {
        <tr>
            <th colspan="4">
                <h3 class="pull-left">@item.Course.Name</h3>
                <span class="pull-right">
                    @if(item.Course.Students != null)
                    {
                        item.Course.Students.Count(s => s.IsActive);
                    }
                </span>
            </th>
        </tr>

        <tr>
            <th>
                @{
                    Model.Props["sortOrder"] = Model.SortOrder == "fnum_asc" ? "fnum_desc" : "fnum_asc";
                    @Html.ActionLink("Faculty number", "Details", "Subject", new RouteValueDictionary(Model.Props), null)
                }
            </th>
            <th>
                @{
                    Model.Props["sortOrder"] = Model.SortOrder == "name_asc" ? "name_desc" : "name_asc";
                    @Html.ActionLink("Name", "Details", "Subject", new RouteValueDictionary(Model.Props), null)
                }
            </th>
            <th>Grades</th>
            <th>Final Grade</th>
        </tr>
        if (item.Course.Students != null)
        {
            foreach (var s in item.Course.Students)
            {
                <tr @if (!s.IsActive) { @Html.Raw("style=color:red")  }>
                    <td>@s.FacultyNumber</td>
                    <td>@Html.ActionLink(s.FirstName + " " + s.LastName, "Details", "Student", new { id = s.Id }, new { target = "_blank" })</td>
                    <td>@String.Join(", ", s.Grades.Where(g => g.SubjectId == @item.SubjectId).Select(g => g.GradeValue))</td>
                    <td>
                        @if (s.Grades.Where(g => g.SubjectId == item.Subject.Id).Count() > 0)
                        {
                            @s.Grades.Where(g => g.SubjectId == item.Subject.Id).Average(g => g.GradeValue)
                        }
                    </td>
                </tr>
            }
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td>
                    <strong>Average (course):</strong> @Model.SubjectAverages[item.Course.Id].ToString("0.00")
                </td>
            </tr>
        }
    }
</table>