@model UniversitySystemMVC.ViewModels.SubjectsVM.SubjectsDetailsVM

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Subject.Name - Details</h2>

@*@foreach (var item in Model.CoursesSubjects)
    {
        <h3>@item.Course.Name</h3>
        <table class="table">
            <tr>
                <th>Faculty number</th>
                <th>Name</th>
                <th>Grades</th>
            </tr>
            @foreach (var s in item.Course.Students)
            {
                <tr>
                    <td>@s.FacultyNumber</td>
                    <td>@Html.ActionLink(s.FirstName + " " + s.LastName, "Details", "Student", new { id = s.Id }, new { target = "_blank" })</td>
                    <td>@String.Join(", ", s.Grades.Where(g => g.SubjectId == @item.SubjectId).Select(g => g.GradeValue))</td>
                </tr>
            }
        </table>
    }*@
<table class="table">
    @foreach (var item in Model.CoursesSubjects)
    {
        <tr>
            <th colspan="4">
                <h3 class="pull-left">@item.Course.Name</h3>
                <span class="pull-right">@item.Course.Students.Count(s => s.IsActive) students</span>
            </th>
        </tr>

        <tr>
            <th>
                @{
                    Model.Props["sortOrder"] = Model.SortOrder == "fnum_asc" ? "fnum_desc" : "fnum_asc";
                    @Html.ActionLink("Faculty number", "Details", "Subject", new RouteValueDictionary(Model.Props), null)
                }
            </th>
            <th>
                @{
                    Model.Props["sortOrder"] = Model.SortOrder == "name_asc" ? "name_desc" : "name_asc";
                    @Html.ActionLink("Name", "Details", "Subject", new RouteValueDictionary(Model.Props), null)
                }
            </th>
            <th>Grades</th>
            <th>
                @{
                    Model.Props["sortOrder"] = Model.SortOrder == "grade_asc" ? "grade_desc" : "grade_asc";
                    @Html.ActionLink("Final Grade", "Details", "Subject", new RouteValueDictionary(Model.Props), null)
                }
            </th>
        </tr>
        foreach (var s in item.Course.Students)
        {
            <tr @if (!s.IsActive) { @Html.Raw("style=color:red") }>
                <td>@s.FacultyNumber</td>
                <td>@Html.ActionLink(s.FirstName + " " + s.LastName, "Details", "Student", new { id = s.Id }, new { target = "_blank" })</td>
                <td>@String.Join(", ", s.Grades.Where(g => g.SubjectId == @item.SubjectId).Select(g => g.GradeValue))</td>
                <td>
                    @if (s.Grades.Where(g => g.SubjectId == item.Subject.Id).Count() > 0)
                    {
                        @s.Grades.Where(g => g.SubjectId == item.Subject.Id).Average(g => g.GradeValue)
                    }
                </td>
            </tr>
        }
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td>
                <strong>Average:</strong> @Model.SubjectAverages[item.Course.Id]
            </td>
        </tr>
    }
</table>